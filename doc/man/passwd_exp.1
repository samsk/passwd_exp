.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.3
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PASSWD_EXP 1"
.TH PASSWD_EXP 1 "2005-09-11" "perl v5.8.7" "User Contributed Perl Documentation"
.SH "NAME"
passwd_exp \- password/account expiration checking tool
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
passwd_exp [options] [\s-1USERNAME\s0]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBpasswd_exp\fR warns users of password/account expiration via email. It extends similar function of login process, 
that prints such a messages at login time, but many users do not login for a long (long) time and only 
download/forward their email, so they have absolutely no chance to find out what's happening with their account.
.PP
This script will warn them (via email), and save you from request to re-enable users accounts that has 
been 'magicaly' disabled by that \s-1BAD\s0 \s-1BAD\s0 man called Linux or whatever :) (And be sure there will be some if you have 
system with many users forcing them to change their passwords to get just a little more security).
.PP
Extra feature of this script is listing of expired user accounts so you will have some more info about your system.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\-c \s-1FILE\s0			config file" 4
.IX Item "-c FILE			config file"
.PD 0
.IP "\-u \s-1USERNAME\s0		username to check" 4
.IX Item "-u USERNAME		username to check"
.IP "\-l				list users, do not send mails" 4
.IX Item "-l				list users, do not send mails"
.IP "\-f				override `run once per day' restriction" 4
.IX Item "-f				override `run once per day' restriction"
.IP "\-t				test mode, print generated emails instead of sending them" 4
.IX Item "-t				test mode, print generated emails instead of sending them"
.IP "\-T				test configuration file validity" 4
.IX Item "-T				test configuration file validity"
.IP "\-v				verbose mode, more times for more verbosity" 4
.IX Item "-v				verbose mode, more times for more verbosity"
.IP "\-d var=value		define variable for message enviroment" 4
.IX Item "-d var=value		define variable for message enviroment"
.IP "\-m \s-1MODULE\s0			module to use (can be module name or program path)" 4
.IX Item "-m MODULE			module to use (can be module name or program path)"
.IP "\-mi				print module informations" 4
.IX Item "-mi				print module informations"
.IP "\-mo option=value	set module option (argument)" 4
.IX Item "-mo option=value	set module option (argument)"
.IP "\-s  option=value	override config file option" 4
.IX Item "-s  option=value	override config file option"
.PD
.SH "FILES"
.IX Header "FILES"
.IP "/etc/passwd_exp/passwd_exp.conf			\- config file" 4
.IX Item "/etc/passwd_exp/passwd_exp.conf			- config file"
.PD 0
.IP "/etc/passwd_exp/mail				\- mail files search dir" 4
.IX Item "/etc/passwd_exp/mail				- mail files search dir"
.IP "/usr/share/passwd_exp/mail			\- mail files search dir" 4
.IX Item "/usr/share/passwd_exp/mail			- mail files search dir"
.IP "/usr/share/passwd_exp/mod			\- input modules dir" 4
.IX Item "/usr/share/passwd_exp/mod			- input modules dir"
.IP "/etc/cron.daily/passwd_exp.cron			\- daily cron check script" 4
.IX Item "/etc/cron.daily/passwd_exp.cron			- daily cron check script"
.IP "/etc/cron.weekly/passwd_exp\-admin.cron		\- admin weekly cron check script" 4
.IX Item "/etc/cron.weekly/passwd_exp-admin.cron		- admin weekly cron check script"
.PD
.SH "BUGS"
.IX Header "BUGS"
None found (yet).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.RS 4
.IP "\fBText-Tokenizer\fR" 4
.IX Item "Text-Tokenizer"
perl module for fast text analyzation at \fBhttp://devel.dob.sk/Text\-Tokenizer\fR
.IP "\fBpfadmin\fR" 4
.IX Item "pfadmin"
postfix virtual email accounts managment tools (for vmail.pfadmin data module)
\&\fBhttp://devel.dob.sk/pfadmin\fR
.RE
.RS 4
.SH "AUTHOR"
.IX Header "AUTHOR"
Samuel Behan, <samkob(at)gmail(dot)com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2003\-2005 by Samuel Behan
.Sp
This library is free software; you can redistribute it and/or modify
it under the same terms of \s-1GNU/GPL\s0 v2. 
